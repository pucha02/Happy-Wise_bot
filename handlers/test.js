import { testMenuKeyboard } from '../keyboards.js';
import { questions } from '../questionsForTEst.js';
import { sendQuestion } from '../sendQuestion.js';

const isTakingTest = {};
const currentQuestion = {};
const countTrueAnswers = {};

export function testHandler(bot, updateLastInteractionTime) {
  bot.onText(/–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å–≤—ñ–π —Ä—ñ–≤–µ–Ω—å/, async (msg) => {
    const chatId = msg.chat.id;
    await updateLastInteractionTime(chatId);

    await bot.sendMessage(chatId, '–û–±–∏—Ä–∞–π—Ç–µ –∫–Ω–æ–ø–∫–∞–º–∏, —â–æ —Ü—ñ–∫–∞–≤–∏—Ç—åüëá', testMenuKeyboard);
  });

  bot.onText(/–ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç/, async (msg) => {
    const chatId = msg.chat.id;
    isTakingTest[chatId] = true;
    currentQuestion[chatId] = 0;
    countTrueAnswers[chatId] = 0;
    await bot.sendMessage(chatId, '–ü–æ—á–∏–Ω–∞—î–º–æ —Ç–µ—Å—Ç –∑ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó! –î–ª—è –≤–∏—Ö–æ–¥—É –∑ —Ç–µ—Å—Ç—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–í–∏–π—Ç–∏ –∑ —Ç–µ—Å—Ç—É".');
    sendQuestion(chatId, questions, currentQuestion, bot);
  });

  bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    if (msg.text === '–í–∏–π—Ç–∏ –∑ —Ç–µ—Å—Ç—É') {
      isTakingTest[chatId] = false;
      await bot.sendMessage(chatId, '–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–π—à–ª–∏ –∑ —Ç–µ—Å—Ç—É.', testMenuKeyboard);
      return;
    }

    if (isTakingTest[chatId]) {
      const questionData = questions[currentQuestion[chatId]];
      if (msg.text === questionData.answer) {
        currentQuestion[chatId]++;
        countTrueAnswers[chatId]++;
      } else {
        currentQuestion[chatId]++;
      }

      if (currentQuestion[chatId] < questions.length) {
        sendQuestion(chatId, questions, currentQuestion, bot);
      } else {
        await bot.sendMessage(chatId, `–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: ${countTrueAnswers[chatId]}. –î—è–∫—É—é –∑–∞ —É—á–∞—Å—Ç—å!`, testMenuKeyboard);
        isTakingTest[chatId] = false;
      }
    }
  });
}
